-- MySQL Script generated by MySQL Workbench
-- 05/27/16 23:07:25
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MedicalClinicManager
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema MedicalClinicManager
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MedicalClinicManager` DEFAULT CHARACTER SET latin1 ;
USE `MedicalClinicManager` ;

-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`pessoa` (
  `idPessoa` INT NOT NULL AUTO_INCREMENT,
  `dataCadastroPessoa` TIMESTAMP NOT NULL DEFAULT current_timestamp,
  `nomePessoa` VARCHAR(45) NOT NULL,
  `sexoPessoa` ENUM('M', 'F') NOT NULL,
  `rgPessoa` VARCHAR(11) NOT NULL,
  `orgaoEmissorRgPessoa` CHAR(8) NOT NULL,
  `cpfPessoa` VARCHAR(15) NOT NULL,
  `dataNascimentoPessoa` DATE NOT NULL,
  PRIMARY KEY (`idPessoa`),
  UNIQUE INDEX `cpfPessoa_UNIQUE` (`cpfPessoa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`paciente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`paciente` (
  `prontuarioPaciente` INT NOT NULL,
  `idPessoa` INT NOT NULL,
  `estadoCivilPaciente` VARCHAR(25) NOT NULL DEFAULT 'não fornecido',
  `profissaoPaciente` VARCHAR(45) NOT NULL DEFAULT 'não fornecido',
  `escolaridadePaciente` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`prontuarioPaciente`),
  INDEX `fk_paciente_pessoa1_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_paciente_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`endereco` (
  `idPessoa` INT NOT NULL,
  `logradouroEndereco` VARCHAR(45) NOT NULL,
  `numeroEndereco` VARCHAR(45) NOT NULL,
  `complementoEndereco` VARCHAR(45) NULL,
  `bairroEndereco` VARCHAR(45) NOT NULL,
  `cidadeEndereco` VARCHAR(45) NOT NULL,
  `estadoEndereco` ENUM('AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO') NOT NULL,
  `CEPEndereco` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPessoa`),
  INDEX `fk_endereco_pessoa1_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_endereco_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`telefone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`telefone` (
  `idPessoa` INT NOT NULL,
  `telefoneResidencial` VARCHAR(45) NOT NULL,
  `telefoneComercial` VARCHAR(45) NULL,
  `telefoneCelular` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPessoa`),
  INDEX `fk_telefone_pessoa_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_telefone_pessoa`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`email` (
  `idPessoa` INT NOT NULL,
  `enderecoEmail` VARCHAR(60) NOT NULL,
  INDEX `fk_email_pessoa1_idx` (`idPessoa` ASC),
  PRIMARY KEY (`idPessoa`),
  CONSTRAINT `fk_email_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`medico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`medico` (
  `crmMedico` VARCHAR(15) NOT NULL,
  `idPessoa` INT NOT NULL,
  `especialidadeMedico` VARCHAR(45) NOT NULL,
  `statusMedico` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  INDEX `fk_medico_pessoa1_idx` (`idPessoa` ASC),
  PRIMARY KEY (`crmMedico`),
  CONSTRAINT `fk_medico_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`funcionario` (
  `idFuncionario` INT NOT NULL AUTO_INCREMENT,
  `idPessoa` INT NOT NULL,
  `cargoFuncionario` VARCHAR(45) NOT NULL,
  `statusFuncionario` ENUM('A', 'I') NOT NULL DEFAULT 'A',
  PRIMARY KEY (`idFuncionario`),
  INDEX `fk_funcionario_pessoa1_idx` (`idPessoa` ASC),
  CONSTRAINT `fk_funcionario_pessoa1`
    FOREIGN KEY (`idPessoa`)
    REFERENCES `MedicalClinicManager`.`pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MedicalClinicManager`.`consulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`consulta` (
  `dataConsulta` DATE NOT NULL,
  `horarioConsulta` TIME NOT NULL,
  `crmMedico` VARCHAR(15) NOT NULL,
  `prontuarioPaciente` INT NOT NULL,
  `statusConsulta` ENUM('aguardando', 'faltou', 'remarcado', 'em-andamento', 'atendido') NOT NULL,
  `anotacoesConsulta` VARCHAR(200) NOT NULL,
  `examesSolicitados` VARCHAR(200) NULL,
  `isRetorno` ENUM('S', 'N') NOT NULL DEFAULT 'N',
  INDEX `fk_consulta_paciente1_idx` (`prontuarioPaciente` ASC),
  INDEX `fk_consulta_medico1_idx` (`crmMedico` ASC),
  PRIMARY KEY (`horarioConsulta`, `dataConsulta`),
  CONSTRAINT `fk_consulta_paciente1`
    FOREIGN KEY (`prontuarioPaciente`)
    REFERENCES `MedicalClinicManager`.`paciente` (`prontuarioPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_consulta_medico1`
    FOREIGN KEY (`crmMedico`)
    REFERENCES `MedicalClinicManager`.`medico` (`crmMedico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `MedicalClinicManager` ;

-- -----------------------------------------------------
-- Placeholder table for view `MedicalClinicManager`.`consultaAgendada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`consultaAgendada` (`dataConsulta` INT, `horarioConsulta` INT, `crmMedico` INT, `prontuarioPaciente` INT, `statusConsulta` INT, `anotacoesConsulta` INT, `examesSolicitados` INT, `isRetorno` INT);

-- -----------------------------------------------------
-- Placeholder table for view `MedicalClinicManager`.`historicoConsulta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MedicalClinicManager`.`historicoConsulta` (`dataConsulta` INT, `horarioConsulta` INT, `crmMedico` INT, `prontuarioPaciente` INT, `statusConsulta` INT, `anotacoesConsulta` INT, `examesSolicitados` INT, `isRetorno` INT);

-- -----------------------------------------------------
-- View `MedicalClinicManager`.`consultaAgendada`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MedicalClinicManager`.`consultaAgendada`;
USE `MedicalClinicManager`;
CREATE  OR REPLACE VIEW `consultaAgendada` AS
	SELECT * FROM consulta 
    WHERE dataConsulta >= CURDATE()
	GROUP BY dataConsulta
	ORDER BY horarioConsulta;

-- -----------------------------------------------------
-- View `MedicalClinicManager`.`historicoConsulta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MedicalClinicManager`.`historicoConsulta`;
USE `MedicalClinicManager`;
CREATE  OR REPLACE VIEW `historicoConsulta` AS
	SELECT * FROM consulta 
    WHERE dataConsulta < CURDATE()
    GROUP BY dataConsulta
	ORDER BY horarioConsulta;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
